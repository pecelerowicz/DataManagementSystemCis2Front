stages:
  - publish
    #- deploy

variables:
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA

publish:
  #image: docker:latest
  image: 
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  tags:
    - k8s
  stage: publish
  services:
    - docker:dind
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --cache=true --destination $CI_REGISTRY_IMAGE:ci-$CI_PIPELINE_IID


      #deploy:
      #image: alpine:latest
      #stage: deploy
      #tags:
      #- centos
      #script:
      #- echo $ID_RSA_CENTOS
      #- echo $ID_RSA
      #- echo $SERVER_USER_CENTOS
      #- echo $SERVER_IP
      #- echo $CI_BUILD_TOKEN
      #- echo $CI_REGISTRY
      #- chmod og= $ID_RSA_CENTOS
      #- apk update && apk add openssh-client
      #- ssh -i $ID_RSA_CENTOS -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP_CENTOS "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
      #- ssh -i $ID_RSA_CENTOS -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP_CENTOS "docker pull $TAG_COMMIT"
      #- ssh -i $ID_RSA_CENTOS -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP_CENTOS "docker container rm -f data-management-frontend || true"
      #- ssh -i $ID_RSA_CENTOS -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP_CENTOS "docker run -d -p 80:80 --name data-management-frontend $TAG_COMMIT"
      #environment:
      #name: production
      #url: http://46.101.209.29
